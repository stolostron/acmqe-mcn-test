---
- name: Fetch "{{ item.name }} cluster console"
  ansible.builtin.slurp:
    src: "{{ working_path }}/{{ item.name }}/.openshift_install.log"
  register: cluster_console_reg

- name: Fetch "{{ item.name }}" cluster api
  ansible.builtin.slurp:
    src: "{{ working_path }}/{{ item.name }}/auth/kubeconfig"
  register: cluster_api_reg

- name: Fetch "{{ item.name }}" cluster password
  ansible.builtin.slurp:
    src: "{{ working_path }}/{{ item.name }}/auth/kubeadmin-password"
  register: cluster_pass_reg
  no_log: true

- name: Set OCP cluster console
  ansible.builtin.set_fact:
    cluster_console_raw: "{{ cluster_console_reg['content'] | b64decode | regex_search('web-console here: (.+)\"', '\\1') }}"
- ansible.builtin.set_fact:
    cluster_console: "{{ cluster_console_raw[0] }}"

- name: Set OCP cluster url
  ansible.builtin.set_fact:
    cluster_api_raw: "{{ cluster_api_reg['content'] | b64decode | regex_search('server: (.+)', '\\1') }}"
- ansible.builtin.set_fact:
    cluster_api: "{{ cluster_api_raw[0] }}"

- name: Set OCP cluster password
  ansible.builtin.set_fact:
    cluster_pass: "{{ cluster_pass_reg['content'] | b64decode }}"
  no_log: true

- name: Write cluster details into state file
  ansible.builtin.blockinfile:
    path: "{{ working_path }}/{{ clusters_details_file }}"
    block: |
      {{ item.name }}:
        console: {{ cluster_console }}
        api: {{ cluster_api }}
        pass: {{ cluster_pass }}
    marker: "#{mark} {{ item.name }} details"
    create: true
    state: present

- name: Print "{{ item.name }}" cluster details
  vars:
    msg: |
      Deployment of {{ item.name }} cluster succeeded.

      Cluster connection details could be found here: {{ working_path }}/{{ clusters_details_file }}
      Cluster manifests files could be found here: {{ working_path }}/{{ item.name }}/
  ansible.builtin.debug:
    msg: "{{ msg.split('\n') }}"

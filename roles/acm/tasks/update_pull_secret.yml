---
- name: Fetch cluster pull-secret
  kubernetes.core.k8s_info:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: no
    api_version: v1
    kind: Secret
    name: pull-secret
    namespace: openshift-config
  register: pullsecret

- name: Extract original cred secret
  ansible.builtin.set_fact:
    original_secret: "{{ item.data }}"
  loop: "{{ pullsecret.resources }}"
  no_log: true

- name: Extract dockerconfigjson info
  ansible.builtin.set_fact:
    secret_string: "{{ original_secret['.dockerconfigjson'] | b64decode | from_json }}"
  no_log: true

- name: Generate user secret body
  ansible.builtin.set_fact:
    user_secret_body: "{{ user_secret_body | default({})
      | combine({ item['name']: {'auth': (item['user'] ~ ':' ~ item['pass']) | b64encode }}) }}"
  loop: "{{ registry_secrets }}"
  no_log: true

- name: Append user secret body to a user_secret_string
  ansible.builtin.set_fact:
    user_secret_string: "{{ {'auths': user_secret_body} }}"
  no_log: true

- name: Create the new secret string
  ansible.builtin.set_fact:
    new_secret_string: "{{ secret_string | combine(user_secret_string, recursive=True) }}"
  no_log: true

- name: Set the initial update flag
  ansible.builtin.set_fact:
    update_secret: false

- name: Change the update flag if there is a difference in the updated list of auths items
  ansible.builtin.set_fact:
    update_secret: true
  when: "new_secret_string['auths'].keys() | difference(secret_string['auths'].keys()) | length != 0"

- name: Change the update flag if there is a difference in the contents of the auths items
  ansible.builtin.set_fact:
    update_secret: true
  loop: "{{ new_secret_string['auths'].keys() | sort }}"
  when:
    - not update_secret
    - new_secret_string['auths'][item] != secret_string['auths'][item]

- name: Update pull-secret secret
  kubernetes.core.k8s:
    host: "{{ cluster_api }}"
    api_key: "{{ cluster_api_token }}"
    validate_certs: no
    state: present
    merge_type:
      - merge
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ item.secret_name }}"
        namespace: "{{ item.namespace }}"
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: "{{ new_secret_string | to_json | b64encode }}"
  loop:
    - {'secret_name': 'pull-secret', 'namespace': 'openshift-config'}
    - {'secret_name': 'multiclusterhub-operator-pull-secret', 'namespace': "{{ acm_namespace }}"}

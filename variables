#!/bin/bash

export CLUSTERSET="submariner"
export SUBMARINER_NS="submariner-operator"
export SUBMARINER_GLOBALNET="true"
export MANAGED_CLUSTERS=""
export SKIP_GATHER_LOGS="false"
export LOGS="$SCRIPT_DIR/logs"
export KCONF="$LOGS/kubeconfigs"
export SUBM_LOGS="$LOGS/submariner"
export TESTS_LOGS="$SUBM_LOGS/tests_logs"
export TESTS_LOGS_E2E="$TESTS_LOGS/e2e"
export TESTS_LOGS_UI="$TESTS_LOGS/ui"
export DEBUG_LOGS="$SUBM_LOGS/debug_logs"
export POLARION_REPORTS="$TESTS_LOGS/polarion"
export LOG_PATH=""
export SUBCTL_URL_DOWNLOAD="https://github.com/submariner-io/releases/releases"
export SUBCTL_UPSTREAM_URL="https://github.com/submariner-io/subctl"
export PLATFORM="aws,gcp"  # Default platform definition
export SUPPORTED_PLATFORMS="aws,gcp,azure,vsphere"  # Supported platform definition
# Non critial failures will be stored into the variable
# and printed at the end of the execution.
# The testing will be performed,
# but the failure of the final result will be set.
export FAILURES=""
export TESTS_FAILURES="false"
export VALIDATION_STATE=""

# Submariner versioning and image sourcing
# Declare a map to define submariner versions and channel to ACM versions
# The key will define the version of ACM
# The value will define the version of Submariner and a channel

# Declare associative arrays for acm/submariner versions
declare -A ACM_2_6=(
    [acm_version]='2.6'
    [submariner_version]='0.13.0'
    [channel]='stable'
)
export ACM_2_6
declare -A ACM_2_6_2=(
    [acm_version]='2.6.2'
    [submariner_version]='0.13.1'
    [channel]='stable'
)
export ACM_2_6_2
declare -A ACM_2_6_3=(
    [acm_version]='2.6.3'
    [submariner_version]='0.13.1'
    [channel]='stable'
)
export ACM_2_6_3
declare -A ACM_2_6_4=(
    [acm_version]='2.6.4'
    [submariner_version]='0.13.3'
    [channel]='stable'
)
export ACM_2_6_4
declare -A ACM_2_6_5=(
    [acm_version]='2.6.5'
    [submariner_version]='0.13.4'
    [channel]='stable'
)
export ACM_2_6_5
declare -A ACM_2_6_6=(
    [acm_version]='2.6.6'
    [submariner_version]='0.13.5'
    [channel]='stable'
)
export ACM_2_6_6
declare -A ACM_2_6_7=(
    [acm_version]='2.6.7'
    [submariner_version]='0.13.6'
    [channel]='stable'
)
export ACM_2_6_7
declare -A ACM_2_6_8=(
    [acm_version]='2.6.8'
    [submariner_version]='0.13.6'
    [channel]='stable'
)
export ACM_2_6_8
# Declare array of COMPONENTS_VERSIONS of associative arrays
export COMPONENT_VERSIONS=("${!ACM@}")


# Submariner images could be taken from two different places:
# * Official Red Hat registry - registry.redhat.io
# * Downstream Brew registry - brew.registry.redhat.io
# Note - the use of brew will require a secret with brew credentials to present in cluster
# If DOWNSTREAM flag is set to "true", it will fetch downstream images.
export DOWNSTREAM="false"
# Due to https://issues.redhat.com/browse/RFE-1608, add the ability
# to use local ocp cluster registry and import the images.
export LOCAL_MIRROR="true"
# The submariner version will be defined and used
# if the source of the images will be set to quay (downstream).
# The submariner version will be selected automatically.
export SUBMARINER_VERSION_INSTALL=""
export SUBMARINER_CHANNEL_RELEASE=""
# The default IPSEC NATT port is - 4500
export SUBMARINER_IPSEC_NATT_PORT=4505
export SUBMARINER_CABLE_DRIVER="libreswan"
export SUBMARINER_GATEWAY_COUNT=1
# When set to true, the deployment will set 2 gateways
# on first cluster and 1 gateway on other clusters
# Used by the testing pipeline
export SUBMARINER_GATEWAY_RANDOM="false"
# Official RedHat registry
export OFFICIAL_REGISTRY="registry.redhat.io"
export STAGING_REGISTRY="registry.stage.redhat.io"
# External RedHat downstream registry (require authentication)
export BREW_REGISTRY="brew.registry.redhat.io"
export REGISTRY_IMAGE_PREFIX="rhacm2"
export REGISTRY_IMAGE_IMPORT_PATH="rh-osbs"
export CATALOG_REGISTRY="registry.access.redhat.com"
export CATALOG_IMAGE_PREFIX="openshift4"
export CATALOG_IMAGE_IMPORT_PATH="ose-oauth-proxy"
# Internal RedHat downstream registry
export VPN_REGISTRY="registry-proxy.engineering.redhat.com"
# Submariner images names
export SUBM_IMG_BUNDLE="submariner-operator-bundle"
export SUBM_IMG_OPERATOR="submariner-rhel8-operator"
export SUBM_IMG_GATEWAY="submariner-gateway-rhel8"
export SUBM_IMG_ROUTE="submariner-route-agent-rhel8"
export SUBM_IMG_NETWORK="submariner-networkplugin-syncer-rhel8"
export SUBM_IMG_LIGHTHOUSE="lighthouse-agent-rhel8"
export SUBM_IMG_COREDNS="lighthouse-coredns-rhel8"
export SUBM_IMG_GLOBALNET="submariner-globalnet-rhel8"
export SUBM_IMG_NETTEST_DOWNSTREAM="nettest-rhel8"
export SUBM_IMG_NETTEST_UPSTREAM="nettest"
export SUBM_IMG_NETTEST_PATH_UPSTREAM="quay.io/submariner"

export POLARION_VARS_FILE=""
export POLARION_ADD_SKIPPED="false"

export LATEST_IIB=""

# Test type that should be executed.
# e2e (api testing), ui (cypress testing)
export TEST_TYPE="e2e,ui"
# Define the browser to be used for UI testing
# chrome, electron
export TEST_BROWSER="chrome"
# Execute or skip UI tests. By default, execute.
export UI_TESTS="true"
